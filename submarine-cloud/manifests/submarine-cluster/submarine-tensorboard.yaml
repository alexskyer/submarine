#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
apiVersion: v1
kind: PersistentVolume
metadata:
  name: tensorboard-pv
spec:
  accessModes:
    - ReadWriteMany
  capacity:
    storage: 10Gi
  storageClassName: standard
  hostPath:
    path: /tmp/tfboard/
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: tensorboard-pvc
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: standard
  resources:
    requests:
      storage: 10Gi
  volumeName: tensorboard-pv # bind to specific pv
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tensorboard
spec:
  selector:
    matchLabels:
      app: tensorboard-pod
  template:
    metadata:
      labels:
        app: tensorboard-pod
    spec:
      containers:
        - name: tensorboard-container
          image: tensorflow/tensorflow:1.11.0
          command:
            - "tensorboard"
            - "--logdir=/logs"
            - "--path_prefix=/tensorboard"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 6006
          volumeMounts:
            - mountPath: "/logs"
              name: "volume"
      volumes:
        - name: "volume"
          persistentVolumeClaim:
            claimName: "tensorboard-pvc"
---
apiVersion: v1
kind: Service
metadata:
  name: tensorboard-service
spec:
  selector:
    app: tensorboard-pod
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 6006
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: tensorboard-ingressroute
spec:
  entryPoints:
    - web
  routes:
    - kind: Rule
      match: PathPrefix(`/tensorboard`)
      services:
        - kind: Service
          name: tensorboard-service
          port: 8080
