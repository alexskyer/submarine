#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
apiVersion: v1
kind: PersistentVolume
metadata:
  name: submarine-database-pv
spec:
  accessModes:
    - ReadWriteMany
  capacity:
    storage: 1Gi
{{- with .Values.submarine.storage }}
  {{- if eq (.type | lower) "nfs" }}
  nfs:
    server: {{ .nfs.ip }}
    path: {{ .nfs.path }}
  {{- else }}
  hostPath:
    path: "{{ .host.path }}"
    type: DirectoryOrCreate
  {{- end }}
{{- end}}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: submarine-database-pvc
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: ""
  resources:
    requests:
      storage: 1Gi
  volumeName: submarine-database-pv
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Values.submarine.database.name }}"
spec:
  replicas: {{ .Values.submarine.database.replicas }}
  selector:
    matchLabels:
      app: "{{ .Values.submarine.database.name }}"
  template:
    metadata:
      labels:
        app: "{{ .Values.submarine.database.name }}"
      {{ if .Values.submarine.database.dev }}
      annotations:
        timestamp: {{ now | quote }}
      {{ end }}
    spec:
      containers:
        - name: "{{ .Values.submarine.database.name }}"
          image: "{{ .Values.submarine.database.image }}"
          imagePullPolicy: "{{ .Values.submarine.database.imagePullPolicy }}"
          ports:
            - containerPort: 3306
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: "{{ .Values.submarine.database.mysqlRootPassword }}"
          volumeMounts:
            - mountPath: /var/lib/mysql
              name: volume
              subPath: submarine-database
      volumes:
        - name: volume
          persistentVolumeClaim:
            claimName: submarine-database-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: "{{ .Values.submarine.database.name }}"
spec:
  ports:
    - name: "{{ .Values.submarine.database.name }}"
      port: 3306
      targetPort: {{ .Values.submarine.database.servicePort }}
  selector:
    app: "{{ .Values.submarine.database.name }}"
